unit Usuarios;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ComCtrls, Vcl.StdCtrls, Vcl.Grids,
  Vcl.Mask, Data.DB, Vcl.DBGrids, Vcl.Buttons;

type
  TFrmUsuarios = class(TForm)
    PageControl1: TPageControl;
    TbConsulta: TTabSheet;
    Label1: TLabel;
    BtnNovo: TSpeedButton;
    btnAlterar: TSpeedButton;
    BtnDeletar: TSpeedButton;
    edtPesquisa: TEdit;
    grid: TDBGrid;
    tbCadastro: TTabSheet;
    Label2: TLabel;
    Label4: TLabel;
    Label6: TLabel;
    BtnSalvar: TSpeedButton;
    btnCancelar: TSpeedButton;
    Label8: TLabel;
    edtLogin: TEdit;
    edtSenha: TMaskEdit;
    cmbFuncionario: TComboBox;
    edtID: TEdit;
    cmbIDfuncionario: TComboBox;
    Label7: TLabel;
    Label10: TLabel;
    cmbGrupousuarios: TComboBox;
    cmbIDGrupousuarios: TComboBox;
    PROCEDUre salvar;
    procedure alterar;
    procedure pesquisar;
    procedure delete(id: String);
    procedure listarfuncionariosegrupo;
    procedure limparcampos;
    procedure liberarcampos;
    procedure bloquearcampos;
    procedure FormShow(Sender: TObject);
  private
    procedure listarcargos;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmUsuarios: TFrmUsuarios;
  CRUD: String;

implementation

{$R *.dfm}

uses dmodule;

{ TFrmUsuarios }

procedure TFrmUsuarios.alterar;
begin
DMod.QRcon.SQL.Clear;
  DMod.QRcon.SQL.Add('update grupo_usuarios set ');
  DMod.QRcon.SQL.Add('LOGIN = :login,');
  DMod.QRcon.SQL.Add('Senha = :senha,');
  DMod.QRcon.SQL.Add('funcionario_ID = :funcionario_id,');
  DMod.QRcon.SQL.Add('grupo_usuario_id = :grupo_usuario_id');
  DMod.QRcon.SQL.Add('WHERE ID = :ID');

  DMod.QRcon.ParamByName('login').Value := edtLogin.Text;
  DMod.QRcon.ParamByName('ID').Value := edtID.Text;
  DMod.QRcon.ParamByName('senha').Value := edtSenha.Text;
  DMod.QRcon.ParamByName('funcionario_ID').Value := cmbIDfuncionario.Text;
  DMod.QRcon.ParamByName('grupo_usuario_ID').Value := cmbIDGrupousuarios.Text;
  DMod.QRcon.ExecSQL;
  MessageDlg('Cargos Alterado com Sucesso!', mtInformation, [mbOK], 0);
  CRUD := 'R';
end;

procedure TFrmUsuarios.bloquearcampos;
begin
   // bloqueia os edits do formulário

  edtLogin.Enabled := false;
  edtSenha.Enabled := false;
  edtID.Enabled := false;

  cmbFuncionario.Enabled := false;
  cmbGrupousuarios.Enabled := false;
end;

procedure TFrmUsuarios.delete(id: String);
begin
    // função que checa se o edit funcionário foi preenchido

  if Trim(id) = '' then
  begin
    MessageDlg('Nenhum Registro Selecionado', mtInformation, [mbOK], 0);
    Exit;
  end;

  // função para deletar o funcionário.
  if MessageDlg('Deseja mesmo excluir esse Registro', mtConfirmation,
    [mbYes, mbNo], 0) = mrYes then

  begin
    DMod.QRcon.SQL.Clear;
    DMod.QRcon.SQL.Add('delete from grupo_usuarios where id = :id');
    DMod.QRcon.ParamByName('ID').Value := id;
    DMod.QRcon.ExecSQL;
    MessageDlg('Registro deletado com sucesso', mtInformation, [mbOK], 0);
    CRUD := 'R';
  end;

end;

procedure TFrmUsuarios.FormShow(Sender: TObject);
begin
   // quando abre o formulário, o pagecontrol é colocado na primeira página e o crud é coloca no modo de visualização.

  PageControl1.ActivePageIndex := 0;
  listarfuncionariosegrupo;
  pesquisar;
  bloquearcampos;
  CRUD := 'R';
  grid.EditorMode := false;
  edtPesquisa.SetFocus;
end;

procedure TFrmUsuarios.liberarcampos;
begin
   // habilita os edits do formulário
  edtLogin.Enabled := true;
  edtSenha.Enabled := true;

  cmbFuncionario.Enabled := true;
  cmbGrupousuarios.Enabled := true;
end;

procedure TFrmUsuarios.limparcampos;
begin
     // limpa os edits do formulário
  edtLogin.Text := '';
  edtSenha.Text := '';
  edtID.Text := '';

  cmbFuncionario.ItemIndex := 0;
  cmbGrupousuarios.ItemIndex := 0;
end;



procedure TFrmUsuarios.listarfuncionariosegrupo;
begin
 // função para inserir os funcionarios e grupos de usuarios no combobox, criei um cmbbox auxiliar que fica invisivel, só para registrar o ID

  DMod.QRcon.SQL.Clear;
  DMod.QRcon.SQL.Add('select id, nome from funcionarios order by id');
  DMod.QRcon.Open();

  while not DMod.QRcon.Eof do
  begin
    cmbFuncionario.Items.Add(DMod.QRcon.FieldByName('NOME').Value);
    cmbIDfuncionario.Items.Add(DMod.QRcon.FieldByName('id').Value);
    DMod.QRcon.Next;
  end;

  DMod.QRcon.SQL.Clear;
  DMod.QRcon.SQL.Add('select id, nome from grupo_usuarios order by id');
  DMod.QRcon.Open();

  while not DMod.QRcon.Eof do
  begin
    cmbGrupousuarios.Items.Add(DMod.QRcon.FieldByName('NOME').Value);
    cmbIDGrupousuarios.Items.Add(DMod.QRcon.FieldByName('id').Value);
    DMod.QRcon.Next;
  end;
end;

procedure TFrmUsuarios.pesquisar;
begin
     // pesquisa o funcionário, baseado pelo campo pesquisa
  DMod.QRcon.SQL.Clear;
  DMod.QRcon.SQL.Add
    ('select F.id, F.login, c.nome as Funcionario, ci.nome AS grupo_usuario from usuarios F ');
  DMod.QRcon.SQL.Add('LEFT JOIN funcionarios C ON(F.funcionario_id = C.id)');
  DMod.QRcon.SQL.Add('LEFT JOIN gupo_usuarios ci ON(F.grupo_usuario_id = Ci.id)');
  DMod.QRcon.SQL.Add(' where F.nome containing :pesquisa order by id');
  DMod.QRcon.ParamByName('pesquisa').Value := edtPesquisa.Text;
  DMod.QRcon.Open;
  grid.Columns[0].FieldName := 'ID';
  grid.Columns[1].FieldName := 'LOGIN';
  grid.Columns[2].FieldName := 'funcionario';
  grid.Columns[3].FieldName := 'grupo_usuario';
end;

procedure TFrmUsuarios.salvar;
begin
    if CRUD = 'C' then

  begin
    // Inserção do registro na tabela
    DMod.QRcon.SQL.Clear;
    DMod.QRcon.SQL.Add
      ('INSERT INTO USUARIOS (LOGIN, SENHA, FUNCIONARIO_ID, GRUPO_USUARIO_ID) VALUES ( :LOGIN, :SENHA, :FUNCIONARIO_ID, :GRUPO_USUARIO_ID);');
    DMod.QRcon.ParamByName('LOGIN').Value := edtLogin.Text;
    DMod.QRcon.ParamByName('SENHA').Value := edtSenha.Text;
    DMod.QRcon.ParamByName('FUNCIONARIO_ID').Value := cmbIDfuncionario.Text;
    DMod.QRcon.ParamByName('GRUPO_USUARIO_ID').Value := cmbIDGrupousuarios.Text;

    DMod.QRcon.ExecSQL;

    // Consulta o ID gerado na tabela e repassa para o edt de ID
    DMod.QRcon.SQL.Clear;
    DMod.QRcon.SQL.Add
      ('select id from usuarios where id = (select max(id) from usuarios)');
    DMod.QRcon.Open;
    edtID.Text := DMod.QRcon.FieldByName('ID').Value;

    DMod.QRcon.SQL.Clear;
    CRUD := 'R';
    MessageDlg('Salvo com sucesso', mtInformation, [mbOK], 0);
  end
  else if CRUD = 'U' then

  begin
    alterar;
  end;
end;

end.
