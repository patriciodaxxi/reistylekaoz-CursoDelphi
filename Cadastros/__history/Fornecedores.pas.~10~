unit Fornecedores;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.StdCtrls, Vcl.Mask,
  Vcl.Grids, Vcl.DBGrids, Vcl.Buttons, Vcl.ComCtrls;

type
  TfrmFornecedores = class(TForm)
    PageControl1: TPageControl;
    TbConsulta: TTabSheet;
    Label1: TLabel;
    BtnNovo: TSpeedButton;
    btnAlterar: TSpeedButton;
    BtnDeletar: TSpeedButton;
    edtPesquisa: TEdit;
    grid: TDBGrid;
    tbCadastro: TTabSheet;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    BtnSalvar: TSpeedButton;
    btnCancelar: TSpeedButton;
    Label8: TLabel;
    edtNome: TEdit;
    edtEnd: TEdit;
    edtCNPJ: TMaskEdit;
    edtFone: TMaskEdit;
    edtID: TEdit;
    PROCEDUre salvar;
    procedure alterar;
    procedure pesquisar;
    procedure delete(id: String);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmFornecedores: TfrmFornecedores;
  CRUD:STRING;
implementation

{$R *.dfm}

uses dmodule;

{ TfrmFornecedores }

procedure TfrmFornecedores.alterar;
begin
  DMod.QRcon.SQL.Clear;
  DMod.QRcon.SQL.Add('update funcionarios set ');
  DMod.QRcon.SQL.Add('NOME = :nome,');
  DMod.QRcon.SQL.Add('CNPJ = :CNPJ,');
  DMod.QRcon.SQL.Add('TELEFONE = :TELEFONE,');
  DMod.QRcon.SQL.Add('ENDERECO = :ENDERECO,');
  DMod.QRcon.SQL.Add('WHERE ID = :ID');

  DMod.QRcon.ParamByName('NOME').Value := edtNome.Text;
  DMod.QRcon.ParamByName('ID').Value := edtID.Text;
  DMod.QRcon.ParamByName('CNPJ').Value := edtCNPJ.Text;
  DMod.QRcon.ParamByName('TELEFONE').Value := edtFone.Text;
  DMod.QRcon.ParamByName('ENDERECO').Value := edtEnd.Text;


  DMod.QRcon.ExecSQL;
  MessageDlg('Cargos Alterado com Sucesso!', mtInformation, [mbOK], 0);
  CRUD := 'R';
end;

procedure TfrmFornecedores.delete(id: String);
begin
 // função que checa se o edit funcionário foi preenchido

  if Trim(id) = '' then
  begin
    MessageDlg('Nenhum Funcionário Selecionado', mtInformation, [mbOK], 0);
    Exit;
  end;

  // função para deletar o funcionário.
  if MessageDlg('Deseja mesmo excluir esse Registro', mtConfirmation,
    [mbYes, mbNo], 0) = mrYes then

  begin
    DMod.QRcon.SQL.Clear;
    DMod.QRcon.SQL.Add('delete from FORNECEDORES where id = :id');
    DMod.QRcon.ParamByName('ID').Value := id;
    DMod.QRcon.ExecSQL;
    MessageDlg('Registro deletado com sucesso', mtInformation, [mbOK], 0);
    CRUD := 'R';
  end;
end;

procedure TfrmFornecedores.pesquisar;
begin
// pesquisa o funcionário, baseado pelo campo pesquisa
  DMod.QRcon.SQL.Clear;
  DMod.QRcon.SQL.Add
    ('select F.id, F.nome, F.telefone, F.CNPJ  from FORNECEDORES F ');
  DMod.QRcon.SQL.Add(' where F.nome containing :pesquisa order by id');
  DMod.QRcon.ParamByName('pesquisa').Value := edtPesquisa.Text;
  DMod.QRcon.Open;
  grid.Columns[0].FieldName := 'ID';
  grid.Columns[1].FieldName := 'NOME';
  grid.Columns[2].FieldName := 'CNPJ';
  grid.Columns[3].FieldName := 'TELEFONE';
end;

procedure TfrmFornecedores.salvar;
begin
    if CRUD = 'C' then

  begin
    // Inserção do registro na tabela
    DMod.QRcon.SQL.Clear;
    DMod.QRcon.SQL.Add
      ('INSERT INTO FORNECEDORES (NOME, CNPJ, TELEFONE, ENDERECO) VALUES ( :NOME, :CNPJ, :TELEFONE, :ENDERECO);');
    DMod.QRcon.ParamByName('NOME').Value := edtNome.Text;
    DMod.QRcon.ParamByName('CNPJ').Value := edtCNPJ.Text;
    DMod.QRcon.ParamByName('TELEFONE').Value := edtFone.Text;
    DMod.QRcon.ParamByName('ENDERECO').Value := edtEnd.Text;


    DMod.QRcon.ExecSQL;

    // Consulta o ID gerado na tabela e repassa para o edt de ID
    DMod.QRcon.SQL.Clear;
    DMod.QRcon.SQL.Add
      ('select id from FORNECEDORES where id = (select max(id) from FORNECEDORES)');
    DMod.QRcon.Open;
    edtID.Text := DMod.QRcon.FieldByName('ID').Value;

    DMod.QRcon.SQL.Clear;
    CRUD := 'R';
    MessageDlg('Salvo com sucesso', mtInformation, [mbOK], 0);
  end
  else if CRUD = 'U' then

  begin
    alterar;
  end;
end;

end.
